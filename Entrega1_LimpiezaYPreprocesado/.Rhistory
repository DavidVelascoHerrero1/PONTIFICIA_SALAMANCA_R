studentPor$Mjob <- as.factor(studentPor$Mjob)
class(studentPor$Mjob)
class(studentMat$Mjob)
class(beer$text)
rowNaBeer <- beer[rowSums(is.na(beer)) > 0, ]
dim(rowNaBeer)[1]
noMissingBeer <- complete.cases(beer)
beerNoNa <- beer[noMissingBeer,]
beerNa <- beer[!noMissingBeer,]
dim(beer)
dim(beerNa)
dim(beerNoNa)
rm(beerNoNa)
rm(beerNa)
names(studentMat)
names(studentMat) <- tolower(names(studentMat))
names(studentMat)
names(studentPor)
names(studentPor) <- tolower(names(studentPor))
names(studentPor)
inicialVar <- "esto_es_un_ejemplo"
tidyVar <- gsub("_","",inicialVar)
tidyVar
View(studentMat)
#Compruebo cuantas _ hay
length(grep("_",studentMat$mjob))
length(grep("_",studentPor$mjob))
studentMat$mjob <- gsub("_","",studentMat$mjob)
studentPor$mjob <- gsub("_","",studentPor$mjob)
length(grep("_",studentMat$mjob))
length(grep("_",studentPor$mjob))
names(beer)
names(beer) <- gsub(pattern = '(_)([[:lower:]])',perl = TRUE,replacement = '\\U\\2',names(beer))
library(stringr)
cleanText <- str_trim(beer$text)
sum(nchar(beer$text))
sum(nchar(cleanText)
)
trimSpaces <- sum(nchar(beer$text)) - sum(nchar(cleanText))
trimSpaces
beer$text <- cleanText
View(beer)
tidyVar <- gsub(" ","",beer$text)
tidyVar
inicialVar <- "esto_es_un_ejemplo"
tidyVar <- gsub("_","",inicialVar)
tidyVar
tidyVar <- gsub(" ","",beer$text)
tidyVar
beer$text <- tidyVar
View(beer)
religions <- read.csv2("../datos/religions.csv",header=FALSE)
View(religions)
View(religions)
religions <- read.csv2("../datos/religions.csv",header=True)
View(religions)
rm(religions)
religions <- read.csv2("../datos/religions.csv",header=True)
religions <- read.csv2("../datos/religions.csv",header=FALSE)
salary <- unname(unlist(religion[1,]))
salary <- unname(unlist(religions[1,]))
religions <- religions[2:dim(religions)[1],]
names(religions) <-salary
View(religions)
library(reshape)
install.packages(reshape)
install.package(reshape)
install.packages(reshape)
install.packages("reshape")
library(reshape)
newReligions<- melt(religions,id=c("religion"))
View(newReligions)
View(religions)
tail(newReligions)
newReligions<- melt(religions,id=c("<$10k"))
View(newReligions)
newReligions<- melt(religions,id=c("religion"))
View(newReligions)
class(newReligions$value)
# Como "value" es un factor, lo transformamos a numérico
newReligions$value <- as.numeric(newReligions$value)
# Como "value" es un factor, lo transformamos a numérico
newReligions$value <- as.numeric(newReligions$value)
class(newReligions$value)
# Ya podemos aplicar xtabs
miXt <- xtabs(value ~ religion + variable, data=newReligions)
View(newReligions)
View(religions)
kable(miXt)
library(knitr)
library(gplots)
library(knitr)
kable(miXt)
View(studentMat)
mediaRomantic<- cast(studentMat,sex~ romantic,mean, value=c("g3"))
View(mediaRomantic)
kable(mediaRomantic)
edad <- rnorm(10,mean=6.5,sd=3)
edad
sample(edad,size=6,replace=TRUE)
probs <- c(0,0.3,0.1,0.3,0,0,0.2,0.1,0,0)
sum(probs)
sample(edad,size=6,replace=TRUE, prob=probs)
sample(edad,size=6,replace=FALSE, prob=probs)
sample(edad,size=6,replace=TRUE, prob=probs)
set.seed(1234)
train_row <- sample(1:nrow(dataset),
nrow(dataset)*0.7)
# Añadir una variable tipo character a un data.frame con $
studentPorRed <- studentPor[1:4,1:3]
studentPorRed$test<- c("TRUE","FALSE","FALSE","TRUE")
class(studentPorRed$test)
library(gplots)
View(studentPorRed)
studentPorRed <- studentPor[1:4,1:3]
studentPorRed <- cbind(studentPorRed, c(TRUE,FALSE,FALSE,TRUE))
names(studentPorRed)[4] <- "test"
View(studentPor)
View(studentPorRed)
```{r}
studentPorTechM <- studentPor
studentPorTechM$techm <- studentPorTechM$mjob %in% c("other","services")
View(studentPorTechM)
View(studentPorTechM)
table(studentPorTechM$techm)
studentPorUnempM <- studentPor
studentPorUnempM$unempm <-ifelse(studentPorUnempM$mjob == "athome", TRUE, FALSE)
View(studentPorUnempM)
library(Hmisc)
ausencias <-cut2(studentMat$absences,c(1,11,75))
levels(ausencias) <-c("ninguna","aceptable","alta")
# Comprobación:
length(studentMat[studentMat$absences==0, c("absences")])
length(studentMat[studentMat$absences>0 & studentMat$absences<11, c("absences")])
length(studentMat[studentMat$absences>10, c("absences")])
library(data.table)
miDt1 <- data.table(
nombre=c("Juan","Maria","Pablo","Ana"), edades=c(25,30,22,29))
miDt2 <- data.table(
nombre=c("Juan","Maria","Pedro","Ana", "Juanjo"),
alturas=c(1.65,1.70,1.68,1.85,1.77))
setkey(miDt1, nombre)
setkey(miDt2, nombre)
merge(miDt1,miDt2)
library(dplyr)
install.packages("dplyr")
library(dplyr)
library(dplyr)
tail(select(studentMat, school, g3)
library(dplyr)
tail(select(studentMat, school, g3))
studentPor %>%filter(age==15) %>%
select(1:5) %>% head()
studentMat %>% mutate (g1g2ratio=(g1/g2)) %>% select(g1g2ratio) %>% head()
studentPor %>% summarise(media=mean(absences),mediana=median(absences),variance=var(absences))
inicialVar <- "esto_es_un_ejemplo"
tidyVar <- gsub("_","",inicialVar)
#tidyVar
studentPor %>% group_by(age, romantic) %>%summarise(n=n())
studentPor %>% group_by(age, romantic) %>% summarise(n=n())
studentPor %>% group_by(age, romantic) %>% summarise()
studentPor %>% group_by(age, romantic) %>% summarise(cuenta=n())
install.packages("dplyr")
library(dplyr)
studentPor %>% group_by(age, romantic) %>% summarise(cuenta=n())
library(dplyr)
studentMatPor <- studentMat %>%
inner_join(studentPor,
c("school","sex","age",
"address","famsize",
"pstatus","medu",
"fedu","mjob","fjob",
"reason","nursery",
"internet"))
library(dplyr)
studentMatPor <- studentMat %>%
inner_join(studentPor,
c("school","sex","age",
"address","famsize",
"pstatus","medu",
"fedu","mjob","fjob",
"reason","nursery",
"internet"))
View(studentPor)
View(studentPor)
library(dplyr)
studentMatPor2 <- studentMat %>%
inner_join(studentPor,
c("school","sex","age",
"address","famsize",
"pstatus","medu",
"fedu","mjob","fjob",
"reason","nursery",
"internet"))
View(studentMatPor2)
View(studentPor)
avgGrades <- (studentMatPor %>% group_by(school) %>% summarise(
meang1mat=mean(g1.x),
meang2mat=mean(g2.x),
meang3mat=mean(g3.x),
meang1por=mean(g1.y),
meang2por=mean(g2.y),
meang3por=mean(g3.y)))
View(avgGrades)
avgGradesDT <- data.table(avgGrades)
library(tidyr)
install.packages("tidyr")
library(tidyr)
avgGradesDT <- data.table(avgGrades)
library(data.table)
avgGradesDT <- data.table(avgGrades)
avgGradesDTGather <- gather(avgGradesDT,"evaluation","grade",2:7,convert=TRUE)
View(avgGradesDTGather)
avgGradesSpread <- spread(avgGradesDTGather,"evaluation","grade")
View(avgGradesSpread)
avgGradesDTGather %>% arrange(grade,school)
View(avgGradesDTGather)
avgGradesDTGather %>% arrange(grade,school)
View(avgGradesDTGather)
avgGradesDTGather %>% arrange(desc(grade),school)
outputDir <- "../datos/output"
if (!file.exists(outputDir)) {
dir.create(outputDir)
}
write.table(studentMatPor,file=paste(outputDir,"studentMatPor.csv",sep="/"),sep=";",row.names=FALSE)
library(xlsx); library(xlsxjars); library(rJava);
library(xlsx); library(xlsxjars); library(rJava);
install.packages("xlsx")
install.packages("rjava")
y
library(rJava)
library(xlsx)
library(xlsx)
detach("package:xlsx", unload = TRUE)
library(xlsx)
parentPath <- dirname(currentDir)
currentDir <- getwd()
parentPath <- dirname(currentDir)
Example <- read.xlsx2(paste0(parentPath, file = "/datos/anemonefish.xls"), sheetIndex=1,startRow=2,endRow=60, row.names=NULL, colIndex=c(1:5),header=TRUE)
library(xlsx)
library(rJava)
R version
R.version
R.version
library(rJava)
library(xlsx)
library(xlsx); library(xlsxjars); library(rJava);
library(xlsx2)
install.packages("xlsx2")
library(xlsx2)
library(xlsx)
detach("package:xlsx", unload = TRUE)
library(xlsx)
library(rJava)
library(xlsx2)
library(xlsx)
currentDir <- getwd()
parentPath <- dirname(currentDir)
Example <- read.xlsx2(paste0(parentPath, file = "/datos/anemonefish.xls"), sheetIndex=1,startRow=2,endRow=60, row.names=NULL, colIndex=c(1:5),header=TRUE)
View(Example)
library(rJava)
library(xlsx)
currentDir <- getwd()
parentPath <- dirname(currentDir)
Example <- read.xlsx2(paste0(parentPath, file = "/datos/EXAMPLE_DataToClean.xls"), sheetIndex=1,startRow=2,endRow=60, row.names=NULL, colIndex=c(1:5),header=TRUE)
Example <- read.xlsx2(paste0(parentPath, file = "/datos/EXAMPLE_DataToClean.xls"), sheetIndex=1,startRow=2,endRow=60, row.names=NULL, colIndex=c(1:5),header=TRUE)
Example <- read.xlsx2(paste0(parentPath, file = "/datos/EXAMPLE_DataToClean.xls"), sheetIndex=1,startRow=2,endRow=60, row.names=NULL, colIndex=c(1:5),header=TRUE)
Example <- read.xlsx2(paste0(parentPath, file = "/datos/example.xlsx"), sheetIndex=1,startRow=2,endRow=60, row.names=NULL, colIndex=c(1:5),header=TRUE)
View(Example)
Example <- read.xlsx2(paste0(parentPath, file = "/datos/example.xlsx"), sheetIndex=1,startRow=1,endRow=60, row.names=NULL, colIndex=c(1:5),header=TRUE)
View(Example)
Example %>% rename (PuntosMarcados = Strange HTML (use unescape HTML))
library(dplyr)
Example %>% rename (PuntosMarcados = Strange HTML (use unescape HTML))
Example %>% rename (HTML = Strange HTML (use unescape HTML))
Example %>% rename (HTML = Strange HTML(use unescape HTML))
Example %>% rename (HTML = Strange)
Example %>% rename (HTML = colnames(Example)[4])
View(Example)
library(rJava)
library(xlsx)
currentDir <- getwd()
parentPath <- dirname(currentDir)
Example <- read.xlsx2(paste0(parentPath, file = "/datos/example.xlsx"), sheetIndex=1,startRow=1,endRow=60, row.names=NULL, colIndex=c(1:5),header=TRUE)
library(dplyr)
Example %>% rename (HTML = colnames(Example)[5])
View(Example)
tail(Example)
Example %>% rename (HTML = colnames(Example)[5])
colnames(Example)
colnames(Example)[5]<- "HTML"
colnames(Example)
tail(Example)
View(Example)
install.packages("gsubfn")
library(gsubfn)
strdehtml(Example$HTML)
strdehtml <- function(s) {
ret <- gsubfn("&#([0-9]+);", function(x) rawToChar(as.raw(as.numeric(x))), s)
ret <- gsubfn("&([^;]+);", function(x) htmlchars[x], ret)
return(ret)
}
strdehtml(Example$HTML)
strdehtml <- function(s) {
ret <- gsubfn("&#([0-9]+);", function(x) rawToChar(as.raw(as.numeric(x))), s)
ret <- gsubfn("&([^;]+);", function(x) Example[x], ret)
return(ret)
}
strdehtml(Example$HTML)
strdehtml(Example)
test <- "My this &amp; last year&#39;s resolutions"
strdehtml(test)
strdehtml <- function(s) {
ret <- gsubfn("&#([0-9]+);", function(x) rawToChar(as.raw(as.numeric(x))), s)
ret <- gsubfn("&([^;]+);", function(x) htmlchars[x], ret)
return(ret)
}
test <- "My this &amp; last year&#39;s resolutions"
strdehtml(test)
install.packages("htmlchars")
library(htmlchars)
library(htmlchars)
strdehtml <- function(s) {
ret <- gsubfn("&#([0-9]+);", function(x) rawToChar(as.raw(as.numeric(x))), s)
ret <- gsubfn("&([^;]+);", function(x) htmlspecialchars[x], ret)
return(ret)
}
test <- "My this &amp; last year&#39;s resolutions"
strdehtml(test)
htmlEscape(Example$HTML)
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
library(htmltools)
htmlEscape(Example$HTML)
View(Example)
htmlEscape(Example$HTML, attribute=FALSE)
htmlEscape(Example$HTML, attribute=" ")
htmlEscape(Example$HTML, attribute="&")
htmlEscape(Example$HTML, attribute=TRUE)
install.packages("stringi")
library(stringi)
stri_unescape_unicode("a\\u0105!\\u0032\\n")
stri_unescape_unicode(Example$HTML)
Example$HTML <- gsub("&nbsp"," ",Example$HTML)
View(Example)
Example$HTML <- gsub("&amp","&",Example$HTML)
View(Example)
library(rJava)
library(xlsx)
currentDir <- getwd()
parentPath <- dirname(currentDir)
Example <- read.xlsx2(paste0(parentPath, file = "/datos/example.xlsx"), sheetIndex=1,startRow=1,endRow=60, row.names=NULL, colIndex=c(1:5),header=TRUE)
Example$HTML <- gsub("&apos;","'",Example$HTML)
Example$HTML <- gsub("&nbsp;"," ",Example$HTML)
Example$HTML <- gsub("&amp;","&",Example$HTML)
Example$HTML <- gsub("&lt;","<",Example$HTML)
Example$HTML <- gsub("&gt;",">",Example$HTML)
Example$HTML <- gsub("&quot;","'",Example$HTML)
library(dplyr)
Example %>% rename (HTML = colnames(Example)[5])
colnames(Example)
colnames(Example)[5]<- "HTML"
Example$HTML <- gsub("&nbsp;"," ",Example$HTML)
Example$HTML <- gsub("&amp;","&",Example$HTML)
Example$HTML <- gsub("&lt;","<",Example$HTML)
Example$HTML <- gsub("&gt;",">",Example$HTML)
Example$HTML <- gsub("&quot;","'",Example$HTML)
Example$HTML <- gsub("&apos;","'",Example$HTML)
View(Example)
Example$HTML <- gsub("&euro;","€",Example$HTML)
View(Example)
Example$HTML <- gsub("&ndash;","-",Example$HTML)
View(Example)
Example$HTML <- gsub("ndash;","-",Example$HTML)
View(Example)
#Hay un par de filas que no tiene el "&" asi que hacemos dos replace para este caso
Example$HTML <- gsub("ndash","-",Example$HTML)
View(Example)
library(rJava)
library(xlsx)
currentDir <- getwd()
parentPath <- dirname(currentDir)
Example <- read.xlsx2(paste0(parentPath, file = "/datos/example.xlsx"), sheetIndex=1,startRow=1,endRow=60, row.names=NULL, colIndex=c(1:5),header=TRUE)
library(dplyr)
Example %>% rename (HTML = colnames(Example)[5])
colnames(Example)
colnames(Example)[5]<- "HTML"
Example$HTML <- gsub("&nbsp;"," ",Example$HTML)
Example$HTML <- gsub("&amp;","&",Example$HTML)
Example$HTML <- gsub("&lt;","<",Example$HTML)
Example$HTML <- gsub("&gt;",">",Example$HTML)
Example$HTML <- gsub("&apos;","'",Example$HTML)
Example$HTML <- gsub("&euro;","€",Example$HTML)
Example$HTML <- gsub("&ndash;","-",Example$HTML)
#Hay un par de filas que no tiene el "&" asi que hacemos dos replace para este caso
Example$HTML <- gsub("ndash","-",Example$HTML)
View(Example)
View(Example)
library(dplyr)
Example %>% rename (HTML = colnames(Example)[5])
Example %>% rename (HTML2 = colnames(Example)[5])
View(Example)
Example$HTML <- gsub("&quot;","\c",Example$HTML)
Example$HTML <- gsub("&quot;",\c,Example$HTML)
Example$HTML <- gsub("&quot;","\"",Example$HTML)
View(Example)
library(dplyr)
View(Example)
tail(select(Example, Year, HTML))
#Lo mismo
Example %>% select(Year,HTML) %>% tail()
#Rename
Example %>% rename (Street.2..in.Refine.use.titlecase.and.cluster.and.edit. = colnames(Example)[3])
#Rename
colnames(Example)[4]<- "Street2"
View(Example)
Example %>% rename ("Calle2"= "Street2")
View(Example)
library(rJava)
library(xlsx)
currentDir <- getwd()
parentPath <- dirname(currentDir)
Example <- read.xlsx2(paste0(parentPath, file = "/datos/example.xlsx"), sheetIndex=1,startRow=1,endRow=60, row.names=NULL, colIndex=c(1:5),header=TRUE)
View(Example)
Example %>% rename ("Street2"= colnames(Example)[4])
Example <- Example %>%
#Filter
Example %>%filter(age==	"Alum Rock Road") %>%
#Summarise
```
Example <- Example %>% rename ("Street2"= colnames(Example)[4])
View(Example)
Example <- Example %>% rename ("HTML"= colnames(Example)[5])
View(Example)
#Filter
Example %>%filter(Street2=="	Alum Rock Road") %>%
select(1:5) %>% head()
#Filter
Example %>%filter(Street2=="Alum Rock Road") %>%
select(1:5) %>% head()
#Filter
Example %>%filter(Street2=="Alum Rock Road") %>%
select(1:5) %>% head()
#Summarise
Example %>% summarise(media=mean(absences),mediana=median(absences),variance=var(absences))
#Summarise
Example %>% summarise(media=mean(Year),mediana=median(Year),variance=var(Year))
Example <- Example %>%
rename_with(toupper)
View(Example)
#Summarise
Example %>% summarise(media=mean(Year))
#Summarise
Example %>% summarise(media=mean(YEAR))
#Arrange
ExampleOrdenada %>% arrange(STREET2)
#Arrange
Example %>% arrange(STREET2)
str(Example)
Example_long <- Example %>%
gather(YEAR, obs_values,
starts_with("2011")))
Example_long <- Example %>%
gather(STREET2, STREET2, starts_with("A"))
library(tidyr)
Example_long <- Example %>%
gather(STREET2, STREET2, starts_with("A"))
View(Example_long)
View(Example)
separate(Example, STRET2, c("PARTE1", "PARTE2", sep=" "))
separate(Example, STREET2, c("PARTE1", "PARTE2", sep=" "))
View(Example)
separate(Example, STREET2, c("PARTE1", "PARTE2", sep=" "))
#Rename
Example <- Example %>% rename ("Street1"= colnames(Example)[3])
View(Example)
#Rename
Example <- Example %>% rename ("Ciudad"= colnames(Example)[2])
#Rename
Example <- Example %>% rename ("CIUDAD"= colnames(Example)[2])
EXAMPLE <- EXAMPLE %>% fill(names(EXAMPLE), .CIUDAD = "down")
unitate(Example, "Direccion", c(STREET1, STREET2), sep=" ")
unite(Example, "Direccion", c(STREET1, STREET2), sep=" ")
unite(Example, "Direccion", c(Street1, STREET2), sep=" ")
View(Example)
unite(Example, "Direccion", c(Ciudad, STREET2), sep=" ")
unite(Example, "DIRECCION", c(CIUDAD, STREET2), sep=" ")
View(Example)
unite(Example, "DIRECCION", c(STREET2, CIUDAD), sep=",")
spread(Example, year, STREET2)
spread(Example, YEAR, STREET2)
install.packages("data.table")
library("data.table")
setDT(EXAMPLE)
setDT(Example)
class(Example)
dtExample <- as.data.table(Example)
class(dtExample)
View(dtExample)
#De aquellos que son de 2011
dtExample[YEAR=2011]
View(dtExample)
#De aquellos que son de 2011
dtExample[YEAR =2011]
#De aquellos que son de 2011
dtExample[YEAR ==2011]
#Contar
dtExample[STREET2 =="Alum Rock Road", .N]
dtExample[YEAR =="2011", .N]
